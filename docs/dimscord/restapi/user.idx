getInvite	dimscord/restapi/user.html#getInvite,RestApi,string	user: getInvite(api: RestApi; code: string; with_counts, with_expiration = false;\n          auth = false; guild_scheduled_event_id = none string): Future[Invite]	
getGuildMember	dimscord/restapi/user.html#getGuildMember,RestApi,string,string	user: getGuildMember(api: RestApi; guild_id, user_id: string): Future[Member]	
getGuildMembers	dimscord/restapi/user.html#getGuildMembers,RestApi,string,range[],string	user: getGuildMembers(api: RestApi; guild_id: string; limit: range[1 .. 1000] = 1;\n                after = &quot;0&quot;): Future[seq[Member]]	
editCurrentMember	dimscord/restapi/user.html#editCurrentMember,RestApi,string,string	user: editCurrentMember(api: RestApi; guild_id: string; nick = none string;\n                  reason = &quot;&quot;): owned(Future[void])	
setGuildNick	dimscord/restapi/user.html#setGuildNick,RestApi,string,string,string	user: setGuildNick(api: RestApi; guild_id: string; nick, reason = &quot;&quot;): owned(\n    Future[void])	
addGuildMemberRole	dimscord/restapi/user.html#addGuildMemberRole,RestApi,string,string,string,string	user: addGuildMemberRole(api: RestApi; guild_id, user_id, role_id: string; reason = &quot;&quot;): owned(\n    Future[void])	
removeGuildMemberRole	dimscord/restapi/user.html#removeGuildMemberRole,RestApi,string,string,string,string	user: removeGuildMemberRole(api: RestApi; guild_id, user_id, role_id: string;\n                      reason = &quot;&quot;): owned(Future[void])	
getUser	dimscord/restapi/user.html#getUser,RestApi,string	user: getUser(api: RestApi; user_id: string): Future[User]	
leaveGuild	dimscord/restapi/user.html#leaveGuild,RestApi,string	user: leaveGuild(api: RestApi; guild_id: string): owned(Future[void])	
getCurrentGuildMember	dimscord/restapi/user.html#getCurrentGuildMember,RestApi,string	user: getCurrentGuildMember(api: RestApi; guild_id: string): Future[Member]	
getCurrentUserGuilds	dimscord/restapi/user.html#getCurrentUserGuilds,RestApi,range[]	user: getCurrentUserGuilds(api: RestApi; before, after = none string;\n                     with_counts = false; limit: range[1 .. 200] = 200): Future[\n    seq[Guild]]	
createUserDm	dimscord/restapi/user.html#createUserDm,RestApi,string	user: createUserDm(api: RestApi; user_id: string): Future[DMChannel]	
getCurrentUser	dimscord/restapi/user.html#getCurrentUser,RestApi	user: getCurrentUser(api: RestApi): Future[User]	
getGatewayBot	dimscord/restapi/user.html#getGatewayBot,RestApi	user: getGatewayBot(api: RestApi): Future[GatewayBot]	
getGateway	dimscord/restapi/user.html#getGateway,RestApi	user: getGateway(api: RestApi): Future[string]	
editCurrentUser	dimscord/restapi/user.html#editCurrentUser,RestApi	user: editCurrentUser(api: RestApi; username, avatar = none string): Future[User]	
createGroupDm	dimscord/restapi/user.html#createGroupDm,RestApi,seq[string],Table[string,string]	user: createGroupDm(api: RestApi; access_tokens: seq[string];\n              nicks: Table[string, string]): Future[DMChannel]	
getCurrentApplication	dimscord/restapi/user.html#getCurrentApplication,RestApi	user: getCurrentApplication(api: RestApi): Future[Application]	
registerApplicationCommand	dimscord/restapi/user.html#registerApplicationCommand,RestApi,string,string,string,string,seq[ApplicationCommandOption]	user: registerApplicationCommand(api: RestApi; application_id: string; name: string;\n                           description, guild_id = &quot;&quot;; name_localizations,\n    description_localizations = none Table[string, string]; kind = atSlash;\n                           dm_permission = true; nsfw = false;\n                           default_member_permissions = none PermissionFlags;\n                           options: seq[ApplicationCommandOption] = @[]): Future[\n    ApplicationCommand]	
getApplicationCommands	dimscord/restapi/user.html#getApplicationCommands,RestApi,string,string	user: getApplicationCommands(api: RestApi; application_id: string; guild_id = &quot;&quot;;\n                       with_localizations = false): Future[\n    seq[ApplicationCommand]]	
getApplicationCommand	dimscord/restapi/user.html#getApplicationCommand,RestApi,string,string,string	user: getApplicationCommand(api: RestApi; application_id: string; guild_id = &quot;&quot;;\n                      command_id: string): Future[ApplicationCommand]	
bulkOverwriteApplicationCommands	dimscord/restapi/user.html#bulkOverwriteApplicationCommands,RestApi,string,seq[ApplicationCommand],string	user: bulkOverwriteApplicationCommands(api: RestApi; application_id: string;\n                                 commands: seq[ApplicationCommand];\n                                 guild_id = &quot;&quot;): Future[seq[ApplicationCommand]]	
editApplicationCommand	dimscord/restapi/user.html#editApplicationCommand,RestApi,string,string,string,string,string,seq[ApplicationCommandOption]	user: editApplicationCommand(api: RestApi; application_id, command_id: string;\n                       guild_id, name, description = &quot;&quot;; name_localizations,\n    description_localizations = none Table[string, string];\n                       default_member_permissions = none PermissionFlags;\n                       nsfw = false;\n                       options: seq[ApplicationCommandOption] = @[]): Future[\n    ApplicationCommand]	
deleteApplicationCommand	dimscord/restapi/user.html#deleteApplicationCommand,RestApi,string,string,string	user: deleteApplicationCommand(api: RestApi; application_id, command_id: string;\n                         guild_id = &quot;&quot;): owned(Future[void])	
`%`	dimscord/restapi/user.html#%,set[UserFlags]	user: `%`(o: set[UserFlags]): JsonNode	
createInteractionResponse	dimscord/restapi/user.html#createInteractionResponse,RestApi,string,string,InteractionResponse	user: createInteractionResponse(api: RestApi;\n                          interaction_id, interaction_token: string;\n                          response: InteractionResponse): owned(Future[void])	
interactionResponseMessage	dimscord/restapi/user.html#interactionResponseMessage,RestApi,string,string,InteractionResponseType,InteractionApplicationCommandCallbackData	user: interactionResponseMessage(api: RestApi;\n                           interaction_id, interaction_token: string;\n                           kind: InteractionResponseType;\n                           response: InteractionCallbackDataMessage): owned(\n    Future[void])	
interactionResponseAutocomplete	dimscord/restapi/user.html#interactionResponseAutocomplete,RestApi,string,string,InteractionCallbackDataAutocomplete	user: interactionResponseAutocomplete(api: RestApi;\n                                interaction_id, interaction_token: string;\n                                response: InteractionCallbackDataAutocomplete): owned(\n    Future[void])	
interactionResponseModal	dimscord/restapi/user.html#interactionResponseModal,RestApi,string,string,InteractionCallbackDataModal	user: interactionResponseModal(api: RestApi;\n                         interaction_id, interaction_token: string;\n                         response: InteractionCallbackDataModal): owned(\n    Future[void])	
getApplicationRoleConnectionMetadataRecords	dimscord/restapi/user.html#getApplicationRoleConnectionMetadataRecords,RestApi,string	user: getApplicationRoleConnectionMetadataRecords(api: RestApi; application_id: string): Future[\n    seq[ApplicationRoleConnectionMetadata]]	
updateApplicationRoleConnectionMetadataRecords	dimscord/restapi/user.html#updateApplicationRoleConnectionMetadataRecords,RestApi,string	user: updateApplicationRoleConnectionMetadataRecords(api: RestApi;\n    application_id: string): Future[seq[ApplicationRoleConnectionMetadata]]	
getUserApplicationRoleConnection	dimscord/restapi/user.html#getUserApplicationRoleConnection,RestApi,string	user: getUserApplicationRoleConnection(api: RestApi; application_id: string): Future[\n    ApplicationRoleConnectionMetadata]	
updateUserApplicationRoleConnection	dimscord/restapi/user.html#updateUserApplicationRoleConnection,RestApi,string	user: updateUserApplicationRoleConnection(api: RestApi; application_id: string;\n    platform_name, platform_username = none string; metadata = none\n    ApplicationRoleConnectionMetadata): Future[ApplicationRoleConnectionMetadata]	
